<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.8.1@f73f2299dbc59a3e6c4d66cff4605176e728ee69">
  <file src="src/LaminasAuthentication.php">
    <MixedArrayOffset occurrences="2">
      <code>$params[$password]</code>
      <code>$params[$username]</code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion occurrences="2">
      <code>$params[$password]</code>
      <code>$params[$username]</code>
    </MixedArrayTypeCoercion>
    <MixedAssignment occurrences="2">
      <code>$password</code>
      <code>$username</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="5">
      <code>?UserInterface</code>
      <code>?UserInterface</code>
      <code>ResponseInterface</code>
      <code>ResponseInterface</code>
      <code>UserInterface</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>withHeader</code>
      <code>withStatus</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="5">
      <code>$responseFactory()</code>
      <code>$userFactory($identity, $roles, $details)</code>
      <code>($this-&gt;userFactory)($result-&gt;getIdentity())</code>
      <code>($this-&gt;userFactory)($this-&gt;auth-&gt;getIdentity())</code>
    </MixedReturnStatement>
    <PossiblyNullReference occurrences="2">
      <code>setCredential</code>
      <code>setIdentity</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod occurrences="2">
      <code>setCredential</code>
      <code>setIdentity</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="src/LaminasAuthenticationFactory.php">
    <MixedArgument occurrences="3">
      <code>$auth</code>
      <code>$container-&gt;get(ResponseInterface::class)</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$auth</code>
    </MixedAssignment>
    <PossiblyInvalidArgument occurrences="1">
      <code>$config</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/ConfigProviderTest.php">
    <MissingParamType occurrences="1">
      <code>$actual</code>
    </MissingParamType>
    <MissingReturnType occurrences="3">
      <code>testInvocationReturnsArray</code>
      <code>testReturnedArrayContainsAuthenticationConfig</code>
      <code>testReturnedArrayContainsDependencies</code>
    </MissingReturnType>
    <MixedAssignment occurrences="1">
      <code>$config</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="1">
      <code>($this-&gt;provider)()</code>
    </MixedFunctionCall>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;provider</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="1">
      <code>$this-&gt;provider</code>
    </UndefinedThisPropertyFetch>
  </file>
  <file src="test/LaminasAuthenticationFactoryTest.php">
    <InvalidFunctionCall occurrences="3">
      <code>($this-&gt;factory)($this-&gt;container-&gt;reveal())</code>
      <code>($this-&gt;factory)($this-&gt;container-&gt;reveal())</code>
      <code>($this-&gt;factory)($this-&gt;container-&gt;reveal())</code>
    </InvalidFunctionCall>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>new LaminasAuthenticationFactory()</code>
    </InvalidPropertyAssignmentValue>
    <MissingClosureReturnType occurrences="2">
      <code>function () {</code>
      <code>function () {</code>
    </MissingClosureReturnType>
    <MissingReturnType occurrences="3">
      <code>testInvokeWithContainerAndConfig</code>
      <code>testInvokeWithContainerEmptyConfig</code>
      <code>testInvokeWithEmptyContainer</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$this-&gt;responsePrototype-&gt;reveal()</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$responseFactory</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="1">
      <code>$responseFactory()</code>
    </MixedFunctionCall>
    <MixedMethodCall occurrences="8">
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="6">
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </PossiblyInvalidMethodCall>
    <PossiblyUndefinedMethod occurrences="8">
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="test/LaminasAuthenticationTest.php">
    <MissingClosureReturnType occurrences="2">
      <code>function () {</code>
      <code>function () {</code>
    </MissingClosureReturnType>
    <MissingReturnType occurrences="8">
      <code>testAuthenticateWithGetMethodAndIdentity</code>
      <code>testAuthenticateWithGetMethodAndNoIdentity</code>
      <code>testAuthenticateWithPostMethodAndNoParams</code>
      <code>testAuthenticateWithPostMethodAndNoValidCredential</code>
      <code>testAuthenticateWithPostMethodAndNoValidCredentialAndAlreadyAuthenticated</code>
      <code>testAuthenticateWithPostMethodAndValidCredential</code>
      <code>testAuthenticateWithPostMethodAndValidCredentialAndAlreadyAuthenticated</code>
      <code>testConstructor</code>
    </MissingReturnType>
    <MixedArgument occurrences="15">
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;authService-&gt;reveal()</code>
      <code>$this-&gt;request-&gt;reveal()</code>
      <code>$this-&gt;request-&gt;reveal()</code>
      <code>$this-&gt;request-&gt;reveal()</code>
      <code>$this-&gt;request-&gt;reveal()</code>
      <code>$this-&gt;request-&gt;reveal()</code>
      <code>$this-&gt;request-&gt;reveal()</code>
      <code>$this-&gt;request-&gt;reveal()</code>
    </MixedArgument>
    <MixedMethodCall occurrences="7">
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="18">
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </PossiblyInvalidMethodCall>
    <PossiblyNullReference occurrences="10">
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod occurrences="22">
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>reveal</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
      <code>willReturn</code>
    </PossiblyUndefinedMethod>
  </file>
</files>
